#+OPTIONS: toc:nil
#+TOC: headlines 1

* SECTION Test summary

** Environment

- *Devices*
  - Sender: RPi4B (=arm32=)
  - Receiver: PC (=x86_64=)

- *Network*
  - Ethernet (direct connection)

- *Audio*
  - input and output are WAV files

- *Ping*
  - below 0.3ms

- *Scheduling*
  - =SCHED_RR= disabled

** Info

- *Git revisions*

   #+begin_src shell :results verbatim
     cd ~/dev/roc-streaming/roc-toolkit && git log -1 --format=short
   #+end_src

   #+results:
   : commit 5e8528929835d8c8844ce3fd020047373488e6ab
   : Author: Mikhail Baranov <baranov.mv@gmail.com>
   :
   :     Slot provides Control endpoints ts

   #+begin_src shell :results verbatim
     cd ~/dev/roc-streaming/csvplotter && git log -1 --format=short
   #+end_src

   #+results:
   : commit 1ef0a47962b9071c2cc76175c59179ddf7895d12
   : Author: Mikhail Baranov <baranov.mv@gmail.com>
   :
   :     plot t1-t4 stats

- *Estimate clock offset*

   Rough difference between unix time on two machines.

   #+begin_src shell :results verbatim
     ssh raspberrypi-4b.eth "date -u +%s" | awk -v local="$(date -u +%s)" '{print local - $1}'
   #+end_src

   #+results:
   : 11798932

- *Estimate ping*

   #+begin_src shell :results verbatim
     ping -q -i 0.002 -c 1000 raspberrypi-4b.eth
   #+end_src

   #+results:
   : PING raspberrypi-4b.eth (192.168.2.131) 56(84) bytes of data.
   :
   : --- raspberrypi-4b.eth ping statistics ---
   : 1000 packets transmitted, 1000 received, 0% packet loss, time 1996ms
   : rtt min/avg/max/mdev = 0.119/0.149/0.250/0.025 ms

** Running

- *stop ntpd*

   #+begin_example
   sudo systemctl stop ntp
   #+end_example

- *run roc-send*

   #+begin_example
   ./roc-send -vv -s rtp+rs8m://dell-xps15.eth:10001 -r rs8m://dell-xps15.eth:10002 -c rtcp://dell-xps15.eth:10003 -i file:long.wav
   #+end_example

- *run roc-recv*

   #+begin_example
   ./roc-recv -vv -s rtp+rs8m://0.0.0.0:10001 -r rs8m://0.0.0.0:10002 -c rtcp://0.0.0.0:10003 -o file:test.wav --dump test.csv
   #+end_example

- *run csvplotter*

   #+begin_example
   python3 ./csvplotter.py test.csv
   #+end_example


* SECTION Setup code

#+begin_export html
<details>
  <summary>Click to expand</summary>
#+end_export

#+transclude: [[file:setup.py]]  :src jupyter-python :rest ":session report03 :results none"

#+begin_export html
</details>
#+end_export

#+begin_src jupyter-python :session report03 :results none
  data = load_csv('03_ether_rpi_pc.csv')
  data = data[1:,]
#+end_src


* SECTION Round Trip Time

** Overall

#+begin_src jupyter-python :session report03
  plt.plot(data[:,0]/60, data[:,1]*1000)
  plt.legend(['rtt, ms'], labelcolor='linecolor')
  configure_plot()
#+end_src

#+results:
[[file:./.ob-jupyter/e6b25f42610877625a6981b4dabf2dababd24c9f.png]]

** Zoomed

#+begin_src jupyter-python :session report03
  plt.plot(data[550:600,0]/60, data[550:600,1]*1000)
  plt.legend(['rtt, ms'], labelcolor='linecolor')
  configure_plot()
#+end_src

#+results:
[[file:./.ob-jupyter/5945650b6c7d205fb0295bb277d9944e1f61df50.png]]

** Statistics

#+begin_src jupyter-python :session report03
  format_tables(stats_table('rtt', data[:,1]),
                jitter_table('rtt_jitter', data[:,1]))
#+end_src

#+results:
|       | *=rtt=*  | *=rtt_jitter=* |
|-------+----------+----------------|
| *min* | 0.356 ms | 0.000 ms       |
| *max* | 0.529 ms | 0.169 ms       |
| *avg* | 0.462 ms | 0.010 ms       |
| *p95* | 0.508 ms | 0.037 ms       |


* SECTION Clock Offset

** Overall

#+begin_src jupyter-python :session report03
  plt.plot(data[:,0]/60, data[:,2], 'C5')
  plt.legend(['clock_offset, sec'], labelcolor='linecolor')
  configure_plot()
#+end_src

#+results:
[[file:./.ob-jupyter/8558d97a5e85d75ef8de7a646449764af2cc0531.png]]


** Zoomed

#+begin_src jupyter-python :session report03
  plt.plot(data[550:600,0]/60, data[550:600,2]*1000, 'C5')
  plt.legend(['clock_offset, sec'], labelcolor='linecolor')
  configure_plot()
#+end_src

#+results:
[[file:./.ob-jupyter/6cad361c1467cff15eaf6de9e761718f2677620f.png]]

** Statistics

#+begin_src jupyter-python :session report03
  format_tables(jitter_table('clock_offset_jitter', data[:,2]))
#+end_src

#+results:
|       | *=clock_offset_jitter=* |
|-------+-------------------------|
| *min* | 0.000 ms                |
| *max* | 0.038 ms                |
| *avg* | 0.003 ms                |
| *p95* | 0.010 ms                |

#+begin_src jupyter-python :session report03
  format_tables(drift_table('clock_offset_drift', data[:,0], data[:,2]))
#+end_src

#+results:
|           | *=clock_offset_drift=* |
|-----------+------------------------|
| *sec/sec* |               0.000016 |
| *sec/day* |                  1.378 |
