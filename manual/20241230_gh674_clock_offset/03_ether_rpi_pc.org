#+OPTIONS: toc:nil
#+TOC: headlines 1

* SECTION Test summary

** Environment

- *Devices*
  - Sender: RPi4 (=arm32=)
  - Receiver: PC (=x86_64=)

- *Network*
  - Ethernet (direct connection)

- *Ping*
  - below 0.3ms
  
** Info

- *Git revisions*

   #+begin_src shell :results verbatim
     cd ~/dev/roc-streaming/roc-toolkit && git log -1 --format=short
   #+end_src

   #+results:
   : commit 5e8528929835d8c8844ce3fd020047373488e6ab
   : Author: Mikhail Baranov <baranov.mv@gmail.com>
   : 
   :     Slot provides Control endpoints ts

   #+begin_src shell :results verbatim
     cd ~/dev/roc-streaming/csvplotter && git log -1 --format=short
   #+end_src

   #+results:
   : commit 1ef0a47962b9071c2cc76175c59179ddf7895d12
   : Author: Mikhail Baranov <baranov.mv@gmail.com>
   : 
   :     plot t1-t4 stats

- *Estimate clock offset*

   Rough difference between unix time on two machines.

   #+begin_src shell :results verbatim
     ssh raspberrypi-4b.eth "date -u +%s" | awk -v local="$(date -u +%s)" '{print local - $1}'
   #+end_src

   #+results:
   : 11798932

- *Estimate ping*

   #+begin_src shell :results verbatim
     ping -q -i 0.002 -c 1000 raspberrypi-4b.eth
   #+end_src

   #+results:
   : PING raspberrypi-4b.eth (192.168.2.131) 56(84) bytes of data.
   : 
   : --- raspberrypi-4b.eth ping statistics ---
   : 1000 packets transmitted, 1000 received, 0% packet loss, time 1996ms
   : rtt min/avg/max/mdev = 0.119/0.149/0.250/0.025 ms

** Running

- *stop ntpd*

   #+begin_example
   sudo systemctl stop ntp
   #+end_example

- *run roc-send*

   #+begin_example
   ./roc-send -vv -s rtp+rs8m://dell-xps15.eth:10001 -r rs8m://dell-xps15.eth:10002 -c rtcp://dell-xps15.eth:10003 -i file:long.wav
   #+end_example

- *run roc-recv*

   #+begin_example
   ./roc-recv -vv -s rtp+rs8m://0.0.0.0:10001 -r rs8m://0.0.0.0:10002 -c rtcp://0.0.0.0:10003 -o file:test.wav --dump test.csv
   #+end_example

- *run csvplotter*

   #+begin_example
   python3 ./csvplotter.py test.csv
   #+end_example


* SECTION Setup code

#+transclude: [[file:setup.org]]

#+begin_src ipython :session
  data = load_csv('03_ether_rpi_pc.csv')
  data = data[1:,]
#+end_src

#+results:
: # Out[84]:


* SECTION Round Trip Time

** Overall

#+begin_src ipython :session :results raw drawer
  plt.plot(data[:,0]/60, data[:,1]*1000)
  plt.legend(['rtt, ms'], labelcolor='linecolor')
  configure_plot()
#+end_src

#+results:
:results:
# Out[85]:
[[file:./obipy-resources/ItF268.png]]
:end:

** Zoomed

#+begin_src ipython :session :results raw drawer
  plt.plot(data[550:600,0]/60, data[550:600,1]*1000)
  plt.legend(['rtt, ms'], labelcolor='linecolor')
  configure_plot()
#+end_src

#+results:
:results:
# Out[86]:
[[file:./obipy-resources/g4CACo.png]]
:end:

** Statistics

#+begin_src ipython :session :results output verbatim
  print_stats("RTT", data[:,1])
  print_jitter("RTT", data[:,1])
#+end_src

#+results:
#+begin_example
RTT statistics:
  min:  0.356 ms
  max:  0.529 ms
  avg:  0.462 ms
  p95:  0.508 ms
  
RTT jitter:
  min:  0.000 ms
  max:  0.169 ms
  avg:  0.010 ms
  p95:  0.037 ms
  
#+end_example


* SECTION Clock Offset

** Overall

#+begin_src ipython :session :results raw drawer
  plt.plot(data[:,0]/60, data[:,2], 'C5')
  plt.legend(['clock_offset, sec'], labelcolor='linecolor')
  configure_plot()
#+end_src

#+results:
:results:
# Out[88]:
[[file:./obipy-resources/Vl6xxc.png]]
:end:


** Zoomed

#+begin_src ipython :session :results raw drawer
  plt.plot(data[550:600,0]/60, data[550:600,2]*1000, 'C5')
  plt.legend(['clock_offset, ms'], labelcolor='linecolor')
  configure_plot()
#+end_src

#+results:
:results:
# Out[89]:
[[file:./obipy-resources/PQH2wP.png]]
:end:

** Statistics

#+begin_src ipython :session :results output verbatim
  print_drift("Clock offset", data[:,0], data[:,2])
  print_jitter("Clock offset", data[:,2])
#+end_src

#+results:
#+begin_example
Clock offset drift:
  0.000016 sec/sec
  1.378 sec/day
  
Clock offset jitter:
  min:  0.000 ms
  max:  0.038 ms
  avg:  0.003 ms
  p95:  0.010 ms
  
#+end_example
