# -*- org-image-actual-width: 1000; -*-
#+OPTIONS: toc:nil

* HEADING =02--bad_wifi--no_load=
  :PROPERTIES:
  :UNNUMBERED: notoc
  :END:
  #+TOC: headlines 1


* SECTION Test summary

** Environment

- *Devices*
  - Sender: RPi4B (=arm32=)
  - Receiver: PC (=x86_64=)

- *Network*
  - RPi connected to Wi-Fi 2.4GHz AP
  - PC connected to Wi-Fi 5GHz AP
  - Two APs connected via Ethernet cable

- *Audio*
  - input and output are WAV files

- *Ping*
  - below 10ms with regular spikes up to 90ms and notable jitter

- *Scheduling*
  - =SCHED_RR= disabled

** Info

- *Git revisions*

   #+begin_src shell :results verbatim
     cd ~/dev/roc-streaming/roc-toolkit && git log -1 --format=short
   #+end_src

   #+results:
   : commit 5e8528929835d8c8844ce3fd020047373488e6ab
   : Author: Mikhail Baranov <baranov.mv@gmail.com>
   : 
   :     Slot provides Control endpoints ts

   #+begin_src shell :results verbatim
     cd ~/dev/roc-streaming/csvplotter && git log -1 --format=short
   #+end_src

   #+results:
   : commit 1ef0a47962b9071c2cc76175c59179ddf7895d12
   : Author: Mikhail Baranov <baranov.mv@gmail.com>
   : 
   :     plot t1-t4 stats

- *Estimate clock offset*

   Rough difference between unix time on two machines.

   #+begin_src shell :results verbatim
     ssh raspberrypi-4b.lan "date -u +%s" | awk -v local="$(date -u +%s)" '{print local - $1}'
   #+end_src

   #+results:
   : 11799153

- *Estimate ping*

   #+begin_src shell :results verbatim
     ping -q -i 0.002 -c 1000 raspberrypi-4b.lan
   #+end_src

   #+results:
   : PING raspberrypi-4b.lan (192.168.0.141) 56(84) bytes of data.
   : 
   : --- raspberrypi-4b.lan ping statistics ---
   : 1000 packets transmitted, 984 received, 1.6% packet loss, time 3355ms
   : rtt min/avg/max/mdev = 1.353/5.328/158.987/13.725 ms, pipe 16

** Running

- *stop ntpd*

   #+begin_example
   sudo systemctl stop ntp
   #+end_example

- *run roc-send*

   #+begin_example
   ./roc-send -vv -s rtp+rs8m://dell-xps15.lan:10001 -r rs8m://dell-xps15.lan:10002 -c rtcp://dell-xps15.lan:10003 -i file:long.wav
   #+end_example

- *run roc-recv*

   #+begin_example
   ./roc-recv -vv -s rtp+rs8m://0.0.0.0:10001 -r rs8m://0.0.0.0:10002 -c rtcp://0.0.0.0:10003 -o file:test.wav --dump test.csv --min-latency 200ms --max-latency 1s --no-play-timeout 1s
   #+end_example

- *run csvplotter*

   #+begin_example
   python3 ./csvplotter.py test.csv
   #+end_example


* SECTION Setup code

#+begin_export html
<details>
  <summary>Click to expand</summary>
#+end_export

#+transclude: [[file:setup.py]]  :src jupyter-python :rest ":session report02 :results none"

#+begin_export html
</details>
#+end_export

#+begin_src jupyter-python :session report02 :results none
  data = load_csv('02--bad_wifi--no_load.csv')
#+end_src


* SECTION Round Trip Time

** Overall

#+begin_src jupyter-python :session report02
  plt.plot(data[:,0]/60, data[:,1]*1000)
  plt.legend(['rtt, ms'], labelcolor='linecolor')
  configure_plot()
#+end_src

#+results:
[[file:./.ob-jupyter/9ae1c2282644952a3e1d5c39e72516df0e1dbf97.png]]

** Zoomed

#+begin_src jupyter-python :session report02
  plt.plot(data[1300:1600,0]/60, data[1300:1600,1]*1000)
  plt.legend(['rtt, ms'], labelcolor='linecolor')
  configure_plot()
#+end_src

#+results:
[[file:./.ob-jupyter/d3c6f44e38a44da85d3e86eebf95e61f24700356.png]]

** Statistics

#+begin_src jupyter-python :session report02
  format_tables(stats_table('rtt', data[:,1]),
                jitter_table('rtt_jitter', data[:,1]))
#+end_src

#+results:
|       | *=rtt=*   | *=rtt_jitter=* |
|-------+-----------+----------------|
| *min* | 2.346 ms  | 0.000 ms       |
| *max* | 42.096 ms | 25.775 ms      |
| *avg* | 5.724 ms  | 0.804 ms       |
| *p95* | 13.945 ms | 3.204 ms       |


* SECTION Clock Offset

** Overall

#+begin_src jupyter-python :session report02
  plt.plot(data[:,0]/60, data[:,2], 'C5')
  plt.legend(['clock_offset, sec'], labelcolor='linecolor')
  configure_plot()
#+end_src

#+results:
[[file:./.ob-jupyter/681150b3b207ced35be5989eaab30e1b8e18fa30.png]]

** Zoomed

#+begin_src jupyter-python :session report02
  plt.plot(data[1300:1600,0]/60, data[1300:1600,2]*1000, 'C5')
  plt.legend(['clock_offset, sec'], labelcolor='linecolor')
  configure_plot()
#+end_src

#+results:
[[file:./.ob-jupyter/e6bd3b8e84fbf81d97e5c1c9a8de2f8e15618b94.png]]

** Statistics

#+begin_src jupyter-python :session report02
  format_tables(jitter_table('clock_offset_jitter', data[:,2]))
#+end_src

#+results:
|       | *=clock_offset_jitter=* |
|-------+-------------------------|
| *min* | 0.000 ms                |
| *max* | 0.843 ms                |
| *avg* | 0.020 ms                |
| *p95* | 0.060 ms                |

#+begin_src jupyter-python :session report02
  format_tables(drift_table('clock_offset_drift', data[:,0], data[:,2]))
#+end_src

#+results:
|           | *=clock_offset_drift=* |
|-----------+------------------------|
| *sec/sec* |               0.000013 |
| *sec/day* |                  1.141 |
